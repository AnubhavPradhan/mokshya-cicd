name: ci-cd

on:
  push:
    branches: [ main ]
  workflow_dispatch:

concurrency:
  group: docs-deploy
  cancel-in-progress: true

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
      - run: npm ci
      - run: npm run build
      - name: Docker build
        env:
          SITE_URL: ${{ secrets.SITE_URL }}
        run: docker build --target serve --build-arg SITE_URL="$SITE_URL" .

  deploy:
    needs: ci
    runs-on: ubuntu-latest
    env:
      BRANCH: main
      REPO_URL: https://github.com/AnubhavPradhan/mokshya-cicd.git
      DEPLOY_DIR: ~/Deploy/docs-mokshya-ai
    steps:
      - uses: actions/checkout@v4

      - name: Deploy over SSH
        uses: appleboy/ssh-action@v1.0.3
        env:
          SITE_URL: ${{ secrets.SITE_URL }}
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT || 22 }}
          script: |
            set -euo pipefail
            if [ ! -d "$DEPLOY_DIR/.git" ]; then
              mkdir -p "$DEPLOY_DIR"
              git clone "$REPO_URL" "$DEPLOY_DIR"
            fi
            cd "$DEPLOY_DIR"
            git fetch origin
            git reset --hard origin/$BRANCH
            # either pass env inline (preferred) …
            SITE_URL="$SITE_URL" docker compose up -d --build --remove-orphans
            # …or write .env instead:
            # printf "SITE_URL=%s\n" "$SITE_URL" > .env && docker compose up -d --build
            docker image prune -f

